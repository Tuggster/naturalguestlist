type Mutation {
    createSession(name: String): UserSession,
    killSession(id: String): UserSession,
    appendThread(id: String, request: String): UserSession
}

type Query {
    getSession(id: String): UserSession,
    getLog(id: String): [OpenAIMessage],
    getLatest(id: String): OpenAIMessage,
}

# Custom Types

type UserSession {
    id: ID!,
    name: String,
    openAIInit: Boolean,
    conversationLog: [OpenAIMessage!]!,
    state: String,
    result: String
}

type OpenAIMessage {
    role: String!,
    content: String!,
    index: Int
}